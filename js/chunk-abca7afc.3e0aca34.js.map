{"version":3,"sources":["webpack:///./src/views/OverprintPage.vue?380e","webpack:///./node_modules/core-js/modules/es.array.join.js","webpack:///./src/views/OverprintPage.vue?aa4b","webpack:///./src/libs/MergeTextTemplate.ts","webpack:///./src/views/OverprintPage.vue","webpack:///./src/views/OverprintPage.vue?74d8","webpack:///./src/views/OverprintPage.vue?e081"],"names":["$","IndexedObject","toIndexedObject","arrayMethodIsStrict","nativeJoin","join","ES3_STRINGS","Object","STRICT_METHOD","target","proto","forced","separator","call","this","undefined","render","_vm","_h","$createElement","_c","_self","staticClass","_v","_s","longevityList","length","on","$event","preventDefault","mergeLongevity","prayForList","mergePray","letterList","mergeLetter","staticRenderFns","copyFile","fileId","copiedFileName","Promise","gapi","client","drive","files","copy","resource","name","response","result","id","console","log","error","message","createFolder","foldername","fileMetadata","mimeType","create","fields","moveFile","destinationFolderId","get","file","previousParents","parents","update","addParents","removeParents","toVerticalTextFormat","text","replaceAll","substring","merge","data","Date","toLocaleString","requests","promises","chunkSize","dummyCount","i","push","formattedData","format","chunkId","concat","buildRequest","execute","catch","all","folderId","rawData","shortTemplate","longTemplate1","longTemplate2","streamId","Math","ceil","entry","replaceAllText","containsText","matchCase","replaceText","Error","templateId","copyFilePrefix","now","slides","presentations","batchUpdate","presentationId","prayType","prayDetail","registerName","postcode","address","docs","documents","documentId","extend","components","computed","membersList","$store","state","list","forEach","memberForm","isSubmitted","ceremonyForm","longevityBoards","item","isEmpty","prayBoards","personalInformation","informMethod","methods","$notify","type","title","then","component"],"mappings":"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","file":"js/chunk-abca7afc.3e0aca34.js","sourcesContent":["export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./OverprintPage.vue?vue&type=style&index=0&id=0a076aa4&lang=scss&scoped=true&\"","'use strict';\nvar $ = require('../internals/export');\nvar IndexedObject = require('../internals/indexed-object');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\n\nvar nativeJoin = [].join;\n\nvar ES3_STRINGS = IndexedObject != Object;\nvar STRICT_METHOD = arrayMethodIsStrict('join', ',');\n\n// `Array.prototype.join` method\n// https://tc39.es/ecma262/#sec-array.prototype.join\n$({ target: 'Array', proto: true, forced: ES3_STRINGS || !STRICT_METHOD }, {\n  join: function join(separator) {\n    return nativeJoin.call(toIndexedObject(this), separator === undefined ? ',' : separator);\n  }\n});\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"OverprintPage\"},[_c('h2',[_vm._v(\"套印工作區\")]),_c('div',{staticClass:\"container\"},[_c('div',{staticClass:\"card col-3 mx-2\"},[_c('div',{staticClass:\"card-body\"},[_c('h3',{staticClass:\"card-title\"},[_vm._v(\" 長生錄 \")]),_c('p',{staticClass:\"card-text\"},[_vm._v(\" 數量：共\"+_vm._s(_vm.longevityList.length)+\"份 \")]),_c('button',{staticClass:\"btn btn-primary\",on:{\"click\":function($event){$event.preventDefault();return _vm.mergeLongevity($event)}}},[_vm._v(\" 套印長生錄 \")])])]),_c('div',{staticClass:\"card col-3 mx-2\"},[_c('div',{staticClass:\"card-body\"},[_c('h3',{staticClass:\"card-title\"},[_vm._v(\" 往生蓮位 \")]),_c('p',{staticClass:\"card-text\"},[_vm._v(\" 數量：共\"+_vm._s(_vm.prayForList.length)+\"份 \")]),_c('button',{staticClass:\"btn btn-primary\",on:{\"click\":function($event){$event.preventDefault();return _vm.mergePray($event)}}},[_vm._v(\" 套印往生蓮位 \")])])]),_c('div',{staticClass:\"card col-3 mx-2\"},[_c('div',{staticClass:\"card-body\"},[_c('h3',{staticClass:\"card-title\"},[_vm._v(\" 郵寄封面 \")]),_c('p',{staticClass:\"card-text\"},[_vm._v(\" 數量：共\"+_vm._s(_vm.letterList.length)+\"份 \")]),_c('button',{staticClass:\"btn btn-primary\",on:{\"click\":function($event){$event.preventDefault();return _vm.mergeLetter($event)}}},[_vm._v(\" 套印郵寄封面 \")])])])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/* eslint-disable max-classes-per-file */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable class-methods-use-this */\nimport {\n  LongevityBoard, LongevityBoardModel, PersonalInformationModel, PrayBoardModel, PrayBoards,\n} from '@/models/CeremonyFormModel';\n\nasync function copyFile(fileId: string, copiedFileName: string): Promise<string> {\n  try {\n    const response = await gapi.client.drive.files.copy({\n      fileId,\n      resource: {\n        name: copiedFileName,\n      },\n    });\n    const { name, id } = response.result;\n    console.log(`Document \"${name}\" successfully found. with id ${id}\\n`);\n\n    return id;\n  } catch (error) {\n    console.log(`Error: ${error.result.error.message}`);\n    throw error;\n  }\n}\n\nasync function createFolder(foldername: string): Promise<string> {\n  try {\n    const fileMetadata = {\n      name: foldername,\n      mimeType: 'application/vnd.google-apps.folder',\n    };\n    const response = await gapi.client.drive.files.create({\n      resource: fileMetadata,\n      fields: 'id',\n    });\n\n    return response.result.id;\n  } catch (error) {\n    console.log(`Error: ${error.result.error.message}`);\n    throw error;\n  }\n}\n\nexport async function moveFile(fileId: string, destinationFolderId: string): Promise<void> {\n  try {\n    const response = await gapi.client.drive.files.get({\n      fileId,\n      fields: 'parents',\n    });\n\n    const file = response.result;\n\n    const previousParents = file.parents.join(',');\n    await gapi.client.drive.files.update({\n      fileId,\n      addParents: destinationFolderId,\n      removeParents: previousParents,\n      fields: 'id, parents',\n    });\n  } catch (error) {\n    console.log(`Error: ${error}`);\n    throw error;\n  }\n}\n\nfunction toVerticalTextFormat(text: string) {\n  // To perform vertical text in horizontal text,\n  // each charactor should be sperated by new line\n  //\n  // For example:\n  // hello world\n  // ==> h\\ne\\nl\\nl\\no\\n \\nw\\no\\nr\\nl\\nd\\n\n  // h\n  // e\n  // l\n  // l\n  // o\n  //\n  // w\n  // o\n  // r\n  // l\n  // d\n\n  // but the 'space' would be too 'wide' in vertical text.\n  // one way to solve the issue is setting the line height as 0.5,\n  // and insert an extra new line charactor between every charactor in the text\n\n  text = text.replaceAll(/\\s/ig, '\\n');\n  text = text.replaceAll(/[{[(（]/ig, '︵');\n  text = text.replaceAll(/[)）}\\]]/ig, '︶');\n  text = text.replaceAll(/./ig, '$&\\n\\n');\n\n  // remove the tail new lines\n  text = text.substring(0, text.length - 2);\n\n  return text;\n}\n\nexport class MergeLongevity {\n  /**\n   * the id of document/slide template stored in google drive\n   * @see https://docs.google.com/presentation/d/15kt5sHV7taVXOgM2VfyEDr2JGdNLmHrQvPvhU7QbPs4/\n   */\n  static templateId = '15kt5sHV7taVXOgM2VfyEDr2JGdNLmHrQvPvhU7QbPs4';\n\n  /**\n   * the number of data merged in each copy of template\n   */\n  static chunkSize = 4;\n\n  static destinationFolderId = null as string | null;\n\n  static copyFilePrefix = '長生祿位';\n\n  /**\n   * the main task handler, also the task entry point.\n   * use following sub-tasks to complete merge task\n   * 1. format\n   * 2. buildRequest\n   * 3. execute\n   */\n  public static async merge(data: LongevityBoardModel[]): Promise<string> {\n    this.destinationFolderId = await createFolder(`長生祿位_${new Date().toLocaleString()}`);\n\n    let requests = [] as any[];\n    const promises = [] as any[];\n\n    // fill empty slot with dummy data (empty data)\n    if (data.length % this.chunkSize !== 0) {\n      const dummyCount = this.chunkSize - (data.length % this.chunkSize);\n      for (let i = 0; i < dummyCount; i += 1) {\n        data.push(new LongevityBoard(''));\n      }\n    }\n\n    for (let i = 0; i < data.length; i += 1) {\n      // step 1: tranform data into template entry format\n      const formattedData = this.format(data[i]);\n\n      // step 2: use input and formatted data to build request\n      const chunkId = (i % this.chunkSize) + 1;\n\n      requests = requests.concat(\n        this.buildRequest(chunkId, formattedData),\n      );\n\n      // step 3: async execute requests\n      if (chunkId === this.chunkSize) {\n        promises.push(\n          this.execute(requests).catch((error) => {\n            console.log(`Error: ${error.result.error.message}`);\n          }),\n        );\n        requests = [];\n      }\n    }\n\n    try {\n      await Promise.all(promises);\n\n      const folderId = this.destinationFolderId;\n      this.destinationFolderId = null;\n      return folderId;\n    } catch (error) {\n      console.log(`Error: ${error.result.error.message}`);\n      throw error;\n    }\n  }\n\n  /**\n   * format raw data into template data\n   */\n  private static format(rawData: LongevityBoardModel) {\n    let shortTemplate = '';\n    let longTemplate1 = '';\n    let longTemplate2 = '';\n\n    const { name, streamId } = rawData;\n\n    if (name.length <= 8) {\n      shortTemplate = toVerticalTextFormat(name);\n    } else {\n      longTemplate1 = toVerticalTextFormat(name.substring(0, Math.ceil(name.length / 2)));\n      longTemplate2 = toVerticalTextFormat(name.substring(Math.ceil(name.length / 2)));\n    }\n\n    return {\n      shortTemplate,\n      longTemplate1,\n      longTemplate2,\n      streamId,\n    };\n  }\n\n  /**\n   * build requests used to fill (replace) data into template\n   */\n  private static buildRequest(chunkId: number, entry: {\n    shortTemplate: string;\n    longTemplate1: string;\n    longTemplate2: string;\n    streamId: string;\n  }) {\n    const requests = [];\n\n    requests.push(\n      {\n        replaceAllText: {\n          containsText: {\n            text: `{{名稱${chunkId}short}}`,\n            matchCase: true,\n          },\n          replaceText: entry.shortTemplate,\n        },\n      },\n    );\n\n    requests.push(\n      {\n        replaceAllText: {\n          containsText: {\n            text: `{{名稱${chunkId}long1}}`,\n            matchCase: true,\n          },\n          replaceText: entry.longTemplate1,\n        },\n      },\n    );\n\n    requests.push(\n      {\n        replaceAllText: {\n          containsText: {\n            text: `{{名稱${chunkId}long2}}`,\n            matchCase: true,\n          },\n          replaceText: entry.longTemplate2,\n        },\n      },\n    );\n\n    requests.push(\n      {\n        replaceAllText: {\n          containsText: {\n            text: `{{stream${chunkId}}}`,\n            matchCase: true,\n          },\n          replaceText: entry.streamId,\n        },\n      },\n    );\n    return requests;\n  }\n\n  /**\n   * execute requests\n   */\n  private static async execute(requests: object[]) {\n    if (!this.destinationFolderId) {\n      throw new Error('Destination Folder undefine.');\n    }\n\n    const id = await copyFile(this.templateId, `${this.copyFilePrefix}_${Date.now()}`);\n\n    await moveFile(id, this.destinationFolderId);\n\n    return gapi.client.slides.presentations.batchUpdate({\n      presentationId: id,\n      resource: {\n        requests,\n      },\n    });\n  }\n}\n\nexport class MergePray {\n  /**\n   * the id of document/slide template stored in google drive\n   * @see https://docs.google.com/presentation/d/176z-TV6UyIpDXrp-_NSgcSPLwzconBdr4iUonXqff1w/\n   */\n  static templateId = '176z-TV6UyIpDXrp-_NSgcSPLwzconBdr4iUonXqff1w';\n\n  /**\n   * the number of data merged in each copy of template\n   */\n  static chunkSize = 4;\n\n  static destinationFolderId = null as string | null;\n\n  static copyFilePrefix = '往生蓮位';\n\n  public static async merge(data: PrayBoardModel[]): Promise<string> {\n    this.destinationFolderId = await createFolder(`往生蓮位_${new Date().toLocaleString()}`);\n\n    let requests = [] as any[];\n    const promises = [] as any[];\n\n    // fill empty slot with dummy data (empty data)\n    if (data.length % this.chunkSize !== 0) {\n      const dummyCount = this.chunkSize - (data.length % this.chunkSize);\n      for (let i = 0; i < dummyCount; i += 1) {\n        data.push(new PrayBoards('', '', '', ''));\n      }\n    }\n\n    for (let i = 0; i < data.length; i += 1) {\n      // step 1: tranform data into template entry format\n      const formattedData = this.format(data[i]);\n\n      // step 2: use input and formatted data to build request\n      const chunkId = (i % this.chunkSize) + 1;\n\n      requests = requests.concat(\n        this.buildRequest(chunkId, formattedData),\n      );\n\n      // step 3: async execute requests\n      if (chunkId === this.chunkSize) {\n        promises.push(\n          this.execute(requests).catch((error) => {\n            console.log(`Error: ${error.result.error.message}`);\n          }),\n        );\n        requests = [];\n      }\n    }\n\n    try {\n      await Promise.all(promises);\n\n      const folderId = this.destinationFolderId;\n      this.destinationFolderId = null;\n      return folderId;\n    } catch (error) {\n      console.log(`Error: ${error.result.error.message}`);\n      throw error;\n    }\n  }\n\n  private static format(rawData: PrayBoardModel) {\n    let shortTemplate = '';\n    let longTemplate1 = '';\n    let longTemplate2 = '';\n\n    const {\n      prayType, prayDetail, registerName, streamId,\n    } = rawData;\n\n    if (prayType.length <= 8) {\n      shortTemplate = toVerticalTextFormat(prayType);\n    } else {\n      longTemplate1 = toVerticalTextFormat(prayType.substring(0, Math.ceil(prayType.length / 2)));\n      longTemplate2 = toVerticalTextFormat(prayType.substring(Math.ceil(prayType.length / 2)));\n    }\n\n    return {\n      shortTemplate,\n      longTemplate1,\n      longTemplate2,\n      streamId,\n      registerName: toVerticalTextFormat(registerName),\n      prayDetail: toVerticalTextFormat(prayDetail),\n    };\n  }\n\n  private static buildRequest(chunkId: number, entry: {\n    shortTemplate: string;\n    longTemplate1: string;\n    longTemplate2: string;\n    streamId: string;\n    registerName: string;\n    prayDetail: string;\n  }) {\n    const requests = [];\n\n    requests.push(\n      {\n        replaceAllText: {\n          containsText: {\n            text: `{{名稱${chunkId}short}}`,\n            matchCase: true,\n          },\n          replaceText: entry.shortTemplate,\n        },\n      },\n    );\n\n    requests.push(\n      {\n        replaceAllText: {\n          containsText: {\n            text: `{{名稱${chunkId}long1}}`,\n            matchCase: true,\n          },\n          replaceText: entry.longTemplate1,\n        },\n      },\n    );\n\n    requests.push(\n      {\n        replaceAllText: {\n          containsText: {\n            text: `{{名稱${chunkId}long2}}`,\n            matchCase: true,\n          },\n          replaceText: entry.longTemplate2,\n        },\n      },\n    );\n\n    requests.push(\n      {\n        replaceAllText: {\n          containsText: {\n            text: `{{stream${chunkId}}}`,\n            matchCase: true,\n          },\n          replaceText: entry.streamId,\n        },\n      },\n    );\n\n    requests.push(\n      {\n        replaceAllText: {\n          containsText: {\n            text: `{{報恩人${chunkId}}}`,\n            matchCase: true,\n          },\n          replaceText: entry.registerName,\n        },\n      },\n    );\n\n    requests.push(\n      {\n        replaceAllText: {\n          containsText: {\n            text: `{{細項${chunkId}}}`,\n            matchCase: true,\n          },\n          replaceText: entry.prayDetail,\n        },\n      },\n    );\n    return requests;\n  }\n\n  private static async execute(requests: object[]) {\n    if (!this.destinationFolderId) {\n      throw new Error('Destination Folder undefine.');\n    }\n\n    const id = await copyFile(this.templateId, `${this.copyFilePrefix}_${Date.now()}`);\n\n    await moveFile(id, this.destinationFolderId);\n\n    return gapi.client.slides.presentations.batchUpdate({\n      presentationId: id,\n      resource: {\n        requests,\n      },\n    });\n  }\n}\n\nexport class MergeLetter {\n  /**\n   * the id of document/slide template stored in google drive\n   * @see https://docs.google.com/document/d/1kx3tnsGZBuAVk0-qZZn2iv2lffD91QccElM5yTOAOQE/\n   */\n  static templateId = '1kx3tnsGZBuAVk0-qZZn2iv2lffD91QccElM5yTOAOQE';\n\n  /**\n   * the number of data merged in each copy of template\n   */\n  static chunkSize = 1;\n\n  static destinationFolderId = null as string | null;\n\n  static copyFilePrefix = '郵寄封面';\n\n  public static async merge(data: PersonalInformationModel[]): Promise<string> {\n    this.destinationFolderId = await createFolder(`郵寄封面_${new Date().toLocaleString()}`);\n\n    let requests = [] as any[];\n    const promises = [] as any[];\n\n    for (let i = 0; i < data.length; i += 1) {\n      // step 1: tranform data into template entry format\n      const formattedData = this.format(data[i]);\n\n      // step 2: use input and formatted data to build request\n      const chunkId = (i % this.chunkSize) + 1;\n\n      requests = requests.concat(\n        this.buildRequest(chunkId, formattedData),\n      );\n\n      // step 3: async execute requests\n      if (chunkId === this.chunkSize) {\n        promises.push(\n          this.execute(requests).catch((error) => {\n            console.log(`Error: ${error.result.error.message}`);\n          }),\n        );\n        requests = [];\n      }\n    }\n\n    try {\n      await Promise.all(promises);\n\n      const folderId = this.destinationFolderId;\n      this.destinationFolderId = null;\n      return folderId;\n    } catch (error) {\n      console.log(`Error: ${error.result.error.message}`);\n      throw error;\n    }\n  }\n\n  private static format(rawData: PersonalInformationModel) {\n    return rawData;\n  }\n\n  private static buildRequest(chunkId: number, entry: PersonalInformationModel) {\n    const requests = [];\n\n    requests.push(\n      {\n        replaceAllText: {\n          containsText: {\n            text: '{{郵遞區號}}',\n            matchCase: true,\n          },\n          replaceText: entry.postcode,\n        },\n      },\n    );\n\n    requests.push(\n      {\n        replaceAllText: {\n          containsText: {\n            text: '{{地址}}',\n            matchCase: true,\n          },\n          replaceText: entry.address,\n        },\n      },\n    );\n\n    requests.push(\n      {\n        replaceAllText: {\n          containsText: {\n            text: '{{收件人}}',\n            matchCase: true,\n          },\n          replaceText: entry.name,\n        },\n      },\n    );\n    return requests;\n  }\n\n  private static async execute(requests: object[]) {\n    if (!this.destinationFolderId) {\n      throw new Error('Destination Folder undefine.');\n    }\n\n    const id = await copyFile(this.templateId, `${this.copyFilePrefix}_${Date.now()}`);\n\n    await moveFile(id, this.destinationFolderId);\n\n    return gapi.client.docs.documents.batchUpdate({\n      documentId: id,\n      resource: {\n        requests,\n      },\n    });\n  }\n}\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { FormModel } from '@/models/FormModel';\nimport { MergeLetter, MergeLongevity, MergePray } from '@/libs/MergeTextTemplate';\nimport {\n  LongevityBoard,\n  LongevityBoardModel, PersonalInformationModel, PrayBoardModel, PrayBoards,\n} from '@/models/CeremonyFormModel';\nimport Vue from 'vue';\n\nexport default Vue.extend({\n  components: {\n  },\n  data() {\n    return {\n    };\n  },\n  computed: {\n    membersList(): FormModel[] {\n      return this.$store.state.membersList;\n    },\n    longevityList(): LongevityBoardModel[] {\n      const list = [] as LongevityBoardModel[];\n      this.membersList.forEach((memberForm) => {\n        if (memberForm.isSubmitted) {\n          let subStreamId = 1;\n          memberForm.ceremonyForm.longevityBoards.forEach((item) => {\n            if (!LongevityBoard.isEmpty(item)) {\n              // generate sub stream id for each sub item\n              item.streamId = `${memberForm.streamId}_${subStreamId}`;\n              subStreamId += 1;\n              list.push(item);\n            }\n          });\n        }\n      });\n      return list;\n    },\n    prayForList(): PrayBoardModel[] {\n      const list = [] as PrayBoardModel[];\n      this.membersList.forEach((memberForm) => {\n        if (memberForm.isSubmitted) {\n          let subStreamId = 1;\n          memberForm.ceremonyForm.prayBoards.forEach((item) => {\n            if (!PrayBoards.isEmpty(item)) {\n              // generate sub stream id for each sub item\n              item.streamId = `${memberForm.streamId}_${subStreamId}`;\n              subStreamId += 1;\n              list.push(item);\n              if ((item as any).name === '') { console.log(memberForm); }\n            }\n          });\n        }\n      });\n      return list;\n    },\n    letterList(): PersonalInformationModel[] {\n      const list = [] as PersonalInformationModel[];\n      this.membersList.forEach((memberForm) => {\n        if (memberForm.ceremonyForm.personalInformation.informMethod === 'letter') {\n          list.push(memberForm.ceremonyForm.personalInformation);\n        }\n      });\n      return list;\n    },\n  },\n  methods: {\n    mergeLongevity() {\n      this.$notify({\n        type: 'info',\n        title: '執行套印長生錄位...',\n      });\n      MergeLongevity.merge(this.longevityList).then(() => {\n        this.$notify({\n          type: 'success',\n          title: '套印長生錄位完成',\n        });\n      }).catch((error) => {\n        this.$notify({\n          type: 'error',\n          title: '套印長生錄位失敗',\n        });\n        console.error(error);\n      });\n    },\n    mergePray() {\n      this.$notify({\n        type: 'info',\n        title: '執行套印往生蓮位...',\n      });\n      MergePray.merge(this.prayForList).then(() => {\n        this.$notify({\n          type: 'success',\n          title: '套印往生蓮位完成',\n        });\n      }).catch((error) => {\n        this.$notify({\n          type: 'error',\n          title: '套印往生蓮位失敗',\n        });\n        console.error(error);\n      });\n    },\n    mergeLetter() {\n      this.$notify({\n        type: 'info',\n        title: '執行套印郵寄封面...',\n      });\n      MergeLetter.merge(this.letterList).then(() => {\n        this.$notify({\n          type: 'success',\n          title: '套印郵寄封面完成',\n        });\n      }).catch((error) => {\n        this.$notify({\n          type: 'error',\n          title: '套印郵寄封面失敗',\n        });\n        console.error(error);\n      });\n    },\n  },\n});\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./OverprintPage.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./OverprintPage.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./OverprintPage.vue?vue&type=template&id=0a076aa4&scoped=true&\"\nimport script from \"./OverprintPage.vue?vue&type=script&lang=ts&\"\nexport * from \"./OverprintPage.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./OverprintPage.vue?vue&type=style&index=0&id=0a076aa4&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0a076aa4\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}